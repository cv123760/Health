{"version":3,"sources":["components/Items.js","components/FoodGroup.js","components/week.js","components/mealTimes.js","components/Day.js","components/ShoppingListItem.js","components/ShoppingList.js","App.jsx","index.js"],"names":["Items","props","list","useState","visible","toggleVisible","done","className","map","item","index","style","display","onClick","event","preventDefault","addToPlan","group","removeFromFoods","placeholder","onKeyDown","keyCode","target","value","addToFoods","prev","ListFoodGroups","week","Meals","Day","initPos","dayIndex","day","mealTimes","meal","indexNum","Protein","Carb","Veggie","ShoppingListItem","line","toggle","hide","hideCompleted","color","textDecoration","unit","total","ShoppingList","Data","listName","quantities","forEach","getQuatities","Object","keys","Serving","setPServ","num","oz","lb","Math","floor","name","type","min","max","onChange","serv","tomorrow","Date","getDay","App","setError","setIsLoaded","string","setData","useEffect","fetch","then","res","json","result","console","log","error","Foods","newDay","filter","element","daysOfTheWeek","updateDays","length","FoodGroups","toggleHide","showAll","href","FoodGroup","action","method","id","JSON","stringify","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49e8f7e1.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nconst Items = props=>{\n\n    const list = props.list\n\n    // edit options\n    const [visible, toggleVisible] = useState(true)\n\n    const done = visible? \"Edit\": \"Done\"\n\n\n\n\n\n    \n    return <div className = \"box foodGroup\">\n        {list.map((item, index)=>{\n\n            return <div \n                key = {index}\n                className = \"itemDiv\">\n                 <button\n                style={{display: visible? \"inline\": \"none\"}}\n                className = \"item\"\n                key = {item}\n                onClick = {event=>{\n                    event.preventDefault()\n                    props.addToPlan(item, props.group, list)\n                }}\n                >{item}</button>\n\n                <button\n                    style={{display: visible? \"none\":\"inline\"}}\n                    className = \"item\"\n                    onClick = {event=>{\n                        event.preventDefault()\n                        props.removeFromFoods(item, props.group)\n\n                    }}\n                >DELETE {item}</button>\n                \n            </div>\n        })}\n        <div className = \"editFoodGroup\">\n\n            <input \n                style={{display: visible? \"none\":\"inline\"}}\n                className = \"edit\"\n                placeholder = \"Add an Item\"\n                onKeyDown = {event=>{\n                    if (event.keyCode === 13){\n                        let item = event.target.value\n                        props.addToFoods(item, props.group)\n                        event.target.value = \"\"\n\n                    }                   \n                }}\n            \n            />\n\n            \n\n            <button\n                className = \"done\"\n                onClick = {event=>{\n                    event.preventDefault()\n                    toggleVisible(prev=>!prev)\n\n                }}\n            >{done}</button>\n\n        </div>\n\n    </div>\n}\n\nexport default Items\n","import React from 'react';\nimport Items from \"./Items\"\n\nconst ListFoodGroups = props=>{\n\n    return <div>\n        <h1>{props.group}</h1>\n        <Items \n        list = {props.list} // foodgroup array\n        addToPlan = {props.addToPlan}\n        group = {props.group}\n        addToFoods = {props.addToFoods}\n        removeFromFoods = {props.removeFromFoods}\n        />\n    </div>\n\n\n}\n\nexport default ListFoodGroups","const week = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n]\n\nexport default week","const Meals = [\n    \"Breakfast\",\n    \"Lunch\",\n    \"Diner\"\n]\n\nexport default Meals","import React from 'react';\n\nimport mealTimes from \"./mealTimes\"\n\n\nconst Day = props=>{\n    let initPos = 3*props.dayIndex\n\n\n    return <div className = \"box\">\n\n        <h2>{props.day}</h2>\n        <div className = \"day\">\n        {mealTimes.map((meal, index)=>{\n            \n            let indexNum = initPos+index \n\n            return <div className = \"meal\"\n                key = {indexNum}\n            >\n                <h3>{meal}</h3>\n                <p>{props.Protein[indexNum]}</p>\n                <p>{props.Carb[indexNum]}</p>\n                <p>{props.Veggie[indexNum]}</p>\n\n            </div>\n            \n        })}\n            \n        </div>\n\n\n\n\n    </div>\n}\nexport default Day\n\n","import React,{useState} from 'react';\n\nconst ShoppingListItem =props=>{\n    const [line, toggle] = useState (false)\n    let hide = false\n    if(line){hide = props.hideCompleted}\n\n\n    return <p \n    onClick={event=>{\n        event.preventDefault()\n        toggle(prev=>!prev)\n    }}\n    \n    style = {\n        {color: line?\"#29C7AC\":\"white\",\n        textDecoration:line?\"line-through\":\"none\",\n        display: hide?\"none\":\"block\"}\n    }\n    key = {props.index}>{props.unit(props.total)+\" \"+props.item}</p>\n}\n\nexport default ShoppingListItem","import React,{useState} from 'react';\nimport ShoppingListItem from \"./ShoppingListItem\"\n\nconst ShoppingList = props => {\n    let list = props.Data.[props.list]\n    const listName = props.list\n\n    if(props.list === \"Foods\"){list = []}\n\n\n    // render shopping list\n    const quantities = {}\n    \n    \n    const getQuatities = list=>{\n        if (list){\n            list.forEach(item=>{\n                if (quantities.[item]){quantities.[item]++}\n                else{quantities.[item]= 1} \n            })\n        }\n\n    }\n\n    \n    getQuatities(props.Data.[props.list])\n\n\n    const ShoppingList = Object.keys(quantities)\n\n    // serving sizes \n    const [Serving, setPServ] = useState(6)\n\n    const unit =num =>{\n        let oz = num%16\n        let lb = Math.floor(num/16)\n\n        if (lb>0){\n            return lb + \" lbs \" + oz + \" oz \"\n        } else {return oz + \" oz \"}\n    }\n\n\n    return <div>\n        <h3>{listName}</h3>\n        <div className = \"serving\">\n\n            <div className = \"slider\">\n                {/* adjust protein serving */}\n\n                <p>serving size {Serving} oz</p>\n\n                <input \n                name = \"protein\"\n                type = \"range\"\n                min = \"0\"\n                max = \"12\"\n                onChange={event=>{\n                    setPServ(event.target.value)\n                }}\n                />\n\n                {/* <button\n                className = \"edit\"\n                onClick={event=>{\n                    event.preventDefault()\n                    if (proteinServing>0){\n                        setPServ(prev=>prev--)\n                    }\n                }}\n                >-</button>\n\n\n                <button\n                className = \"edit\"\n                onClick={event=>{\n                    event.preventDefault()\n                    if (proteinServing<=11){\n                        setPServ(prev=>prev+1)\n                    }\n                }}\n                >+</button> */}\n            </div>\n\n            \n\n\n           \n\n\n        </div>\n\n        <div>\n            {ShoppingList.map((item, index)=>{\n\n            // establish serving size for element\n            let serv = Serving\n\n            let total = quantities.[item]*serv\n\n            return <ShoppingListItem \n                hideCompleted = {props.hideCompleted}\n                index = {index}\n                unit = {unit}\n                total = {total}\n                item = {item}\n                key = {index}\n            />\n            })}\n\n        </div>\n\n\n\n\n    </div>\n}\n\nexport default ShoppingList","import React,{useState,useEffect} from 'react';\nimport FoodGroup from \"./components/FoodGroup\"\nimport week from \"./components/week\"\nimport Day from \"./components/Day\"\nimport ShopppingList from \"./components/ShoppingList\"\nimport string from \"./components/data.json\"\n\n\n\n\n\n\nconst url = \"https://floating-hamlet-55199.herokuapp.com/getFoods\"\nconst date = new Date()\n\n// set up date\nlet tomorrow = date.getDay()+1\nlet day = tomorrow\n\n// ensure that number tomorrow is an index \n// in week array\nif(!week[tomorrow]){tomorrow = 0}\n\n\n\n\nconst App = ()=>{\n\n    let max = 0\n\n    // retrive saved Data\n\n    const [error, setError] = useState(null);\n        const [isLoaded, setIsLoaded] = useState(false);\n        const [Data, setData] = useState(string);\n      \n        // Note: the empty deps array [] means\n        // this useEffect will run once\n        // similar to componentDidMount()\n        useEffect(() => {\n          fetch(\"http://localhost:5000/getFoods\")\n            .then(res => res.json())\n            .then(\n              (result) => {\n                setIsLoaded(true);\n                setData(result);\n                console.log(result)\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                setIsLoaded(true);\n                setError(error);\n              }\n            )\n        }, [])\n\n\n    // modify Data\n    \n\n    const addToPlan = (item, group)=>{\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: prev.Foods,\n                    Protein: [...prev.Protein, item],\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: [...prev.Carb, item],\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: [...prev.Veggie, item]\n                }\n            }\n        })\n        newDay()\n    }\n\n\n    const addToFoods = (item, group)=>{\n\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: [...prev.Foods.[group], item],\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: [...prev.Foods.[group], item],\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: [...prev.Foods.[group], item],\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: [...prev.Foods.[group], item]\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n    }\n\n    const removeFromFoods = (item, group)=>{\n\n        setData(prev=>{\n\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: prev.Foods.[group].filter(element => element!==item),\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.[group].filter(element => element!==item),\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Foods.[group].filter(element => element!==item),\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: [...prev.Foods.[group], item]\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n\n    }\n\n    const startOver = ()=>{\n        setData(prev=>{\n            return{\n                Foods: prev.Foods,                \n                Protein: [],\n                Carb: [],\n                Veggie: []\n            }\n        })\n        updateDays([week[tomorrow]])\n    }\n\n    \n\n\n  \n    const [daysOfTheWeek, updateDays] = useState([])\n    \n\n\n    const newDay = ()=>{\n        // determine the longest list length\n        max = Math.max(\n            Data.Protein.length,\n            Data.Carb.length,\n            Data.Veggie.length\n        )\n        // if (max === 0){\n        //     updateDays([week[day]])\n        // } else if(daysOfTheWeek.length === 0){\n        // }\n\n\n\n        if (max/daysOfTheWeek.length>3){\n            \n            day++\n            if(!week[day]){day = 0}\n            updateDays(prev=>{\n                return [...prev, week[day]]\n            })\n        }\n    }\n\n    let FoodGroups = []\n    if (Data.Foods){\n        FoodGroups = Object.keys(Data.Foods)\n        newDay()\n    }\n\n\n\n    // Soppinglist \n    const [hideCompleted, toggleHide] = useState(false)\n    let showAll = \"Hide Complete\"\n    if (hideCompleted){showAll = \"Show All\"}\n\n\n\n    return <div>\n\n        <header className = \"box\">\n            <a href= \"/\"> Logo </a>\n            <nav>\n                <a href= \"/mealplan\"> Meal Plan  </a>\n                <a href= \"/strength\"> Strength </a>\n                <a href= \"/cardio\"> Cardio </a>\n            </nav>\n            <a href= \"/logout\"> Log Out </a>\n        </header>\n\n        <div className=\"body\">\n            {/* list food items */}\n            <div className = \"foodsList\">\n\n\n                {FoodGroups.map(group =>{\n                    return <FoodGroup \n                        key = {group}\n                        group = {group} \n                        list = {Data.Foods.[group]}\n                        addToPlan = {addToPlan}\n                        addToFoods = {addToFoods}\n                        removeFromFoods = {removeFromFoods}\n                        />\n                    })   \n                }\n            </div>\n\n            {/* Meal Plan */}\n            <div className=\"mealPlan\">\n                <h1>Meal Plan</h1>\n                \n\n                {daysOfTheWeek.map((day, dayIndex)=>{\n\n                    return <Day \n                    day = {day}\n                    FoodGroups = {FoodGroups}\n                    Protein = {Data.Protein}\n                    Carb = {Data.Carb}\n                    Veggie = {Data.Veggie}\n                    dayIndex = {dayIndex}\n                    key = {dayIndex}\n                    \n                    />\n                }\n                )}\n\n                <form action={url} method = \"post\">\n                    <input \n                    style = {{display:\"none\"}}\n                    type=\"text\" \n                    id = \"saveData\" \n                    name = \"data\" \n                    onChange = {event=>{\n                        event.preventDefault()\n                    }}\n                \n                    \n                    value = {JSON.stringify (Data)}\n                    />\n\n                    <button className = \"done\"\n                        onClick = {event=>{\n                            console.log(document.getElementById(\"saveData\").value)\n                        }}\n                    >save</button>\n\n\n\n\n                    <button className = \"edit\"\n                        onClick = {event=>{\n                            event.preventDefault()\n                            startOver()\n                        }}\n                    >Start Over</button>\n\n                </form>\n                \n                \n\n\n                \n\n            </div>\n\n            <div className = \"box\">\n                <h1>Shopping List</h1>\n\n                <div className =\"day \" >\n\n                    {Object.keys(Data).map(list=>{\n                        if (list === \"Foods\"){return}\n                        return <ShopppingList \n                        hideCompleted = {hideCompleted}\n                        list =  {list}\n                        Data = {Data}\n                        key = {list}\n                        \n                        \n                        />\n                        \n                    })}\n\n\n                </div>\n\n                <button \n                    className = \"edit\"\n                    onClick = {event=>{\n                        toggleHide(prev=>!prev)\n                    }}\n                >{showAll}</button>\n              \n                \n            </div>\n\n        </div>\n\n    </div>\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}