{"version":3,"sources":["components/ShoppingListItem.js","components/ShoppingList.js","components/Items.js","components/FoodGroup.js","components/week.js","components/mealTimes.js","components/Plate.js","components/Meals.js","components/Day.js","App.jsx","index.js"],"names":["ShoppingListItem","props","useState","line","toggle","hide","hideCompleted","className","onClick","event","preventDefault","prev","style","color","textDecoration","display","marginRight","unit","total","item","index","ShoppingList","Data","list","quantities","forEach","getQuatities","Object","keys","intialServing","serving","setServ","num","oz","lb","Math","floor","map","serv","Items","visible","toggleVisible","done","addToPlan","group","removeFromFoods","placeholder","onKeyDown","keyCode","target","value","addToFoods","ListFoodGroups","week","Meals","Plate","lists","slice","weekIndex","mealIndex","contentEditable","suppressContentEditableWarning","innerHTML","updateItem","indexNum","mealTimes","meal","date","Date","Day","daynum","getDay","foodGroups","days","longest","longestList","length","push","weekDay","url","App","setError","setIsLoaded","string","setData","useEffect","fetch","then","res","json","result","console","log","error","Foods","Protein","Carb","Veggie","filter","element","FoodGroups","toggleHide","showAll","href","src","alt","FoodGroup","newArray","newItem","newIndex","action","method","type","id","name","onChange","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fccd456.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nconst ShoppingListItem =props=>{\n    const [line, toggle] = useState (false)\n    let hide = false\n    if(line){hide = props.hideCompleted}\n\n\n    return <p \n    className = \"shoppingListItem\"\n    onClick={event=>{\n        event.preventDefault()\n        toggle(prev=>!prev)\n    }}\n    \n    style = {\n        {color: line?\"#29C7AC\":\"black\",\n        textDecoration:line?\"line-through\":\"none\",\n        display: hide?\"none\":\"block\",\n        marginRight: \"15px\"}\n    }\n    key = {props.index}>{props.unit(props.total)+\" \"+props.item}</p>\n}\n\nexport default ShoppingListItem","import React,{useState} from 'react';\nimport ShoppingListItem from \"./ShoppingListItem\"\n\nconst ShoppingList = props => {\n    let list = props.Data.[props.list]\n    const listName = props.list\n\n    if(props.list === \"Foods\"){list = []}\n\n\n    // render shopping list\n    const quantities = {}\n    \n    \n    const getQuatities = list=>{\n        if (list){\n            list.forEach(item=>{\n                if (quantities.[item]){quantities.[item]++}\n                else{quantities.[item]= 1} \n            })\n        }\n\n    }\n\n    \n    getQuatities(props.Data.[props.list])\n\n\n    const ShoppingList = Object.keys(quantities)\n\n    // serving sizes \n    let intialServing = 8\n    if (props.list === \"Protein\"){intialServing= 6}\n\n\n    const [serving, setServ] = useState(intialServing)\n\n    const unit =num =>{\n        let oz = num%16\n        let lb = Math.floor(num/16)\n\n        if (lb>0){\n            return lb + \" lbs \" + oz + \" oz \"\n        } else {return oz + \" oz \"}\n    }\n\n\n    return <div>\n        <h2>{props.list}</h2>\n\n        <div className = \"serving\">\n            \n            {/* adjust protein serving */}\n            <p\n            className = \"editServing\"\n            onClick={event=>{\n                event.preventDefault()\n                if (serving>0){\n                    setServ(prev=>prev-1)\n                }\n            }}\n            >-</p>\n            \n            <p className = \"servingSize\">serving size {serving} oz</p>\n\n            <p\n            className = \"editServing\"\n            onClick={event=>{\n                event.preventDefault()\n                if (serving<=30){\n                    setServ(prev=>prev+1)\n                }\n            }}\n            >+</p>\n\n        </div>\n\n        <div className = \"singleList\">\n            {ShoppingList.map((item, index)=>{\n\n                // establish serving size for element\n                let serv = serving\n\n                let total = quantities.[item]*serv\n\n                return <ShoppingListItem \n                    hideCompleted = {props.hideCompleted}\n                    index = {index}\n                    unit = {unit}\n                    total = {total}\n                    item = {item}\n                    key = {index}\n                />\n            })}\n\n        </div>\n\n\n\n\n    </div>\n}\n\nexport default ShoppingList","import React,{useState} from 'react';\n\nconst Items = props=>{\n\n    const list = props.list\n\n    // edit options\n    const [visible, toggleVisible] = useState(true)\n\n    const done = visible? \"Edit\": \"Done\"\n\n\n\n\n\n    \n    return <div className = \"singleList\"\n    style={{display: props.visible? \"block\": \"none\"}}\n    // style = {{display: props.visible? \"inline\": \"none\"}}\n    >\n        {list.map((item, index)=>{\n\n            return <div key = {index}>\n                <p\n                    style={{display: visible? \"block\": \"none\"}}\n                    key = {item}\n                    onClick = {event=>{\n                        props.addToPlan(item, props.group, list)\n                    }}\n                    >{item}\n                </p>\n\n                <p\n                    style={{display: visible? \"none\":\"block\"}}\n                    onClick = {event=>{\n                        event.preventDefault()\n                        props.removeFromFoods(item, props.group)\n\n                    }}\n                >DELETE {item}</p>\n                \n            </div>\n        })}\n        <div className = \"editFoodGroup\">\n\n            <input \n                style={{display: visible? \"none\":\"inline\"}}\n                className = \"edit\"\n                placeholder = \"Add an Item\"\n                onKeyDown = {event=>{\n                    if (event.keyCode === 13){\n                        let item = event.target.value\n                        props.addToFoods(item, props.group)\n                        event.target.value = \"\"\n\n                    }                   \n                }}\n            \n            />\n\n            \n\n            <button\n                className = \"done\"\n                onClick = {event=>{\n                    event.preventDefault()\n                    toggleVisible(prev=>!prev)\n\n                }}\n            >{done}</button>\n\n        </div>\n\n    </div>\n}\n\nexport default Items\n","import React, { useState } from 'react';\nimport Items from \"./Items\"\n\nconst ListFoodGroups = props=>{\n    const [visible, toggle] = useState( true ) \n\n    return <div>\n        <h2\n        onClick = {event=>{\n            event.preventDefault()\n            toggle(prev=>!prev)\n        }}\n        >{props.group}</h2>\n        \n        <Items \n        visible = {visible}\n        list = {props.list} // foodgroup array\n        addToPlan = {props.addToPlan}\n        group = {props.group}\n        addToFoods = {props.addToFoods}\n        removeFromFoods = {props.removeFromFoods}\n        />\n    </div>\n\n\n}\n\nexport default ListFoodGroups","const week = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n]\n\nexport default week","const Meals = [\n    \"Breakfast\",\n    \"Lunch\",\n    \"Diner\"\n]\n\nexport default Meals","import React from \"react\";\n\nconst Plate = props =>{\n    const lists = Object.keys(props.Data).slice(1,)\n\n\n    return <div>\n        {lists.map(list=>{\n            const index = props.weekIndex*3 + props.mealIndex\n            return<p \n            contentEditable = \"true\"\n            suppressContentEditableWarning={true}\n            key ={props.indexNum}\n            onKeyDown = {event =>{\n                if (event.keyCode === 13 ){\n                    event.preventDefault()\n                    let item = event.target.innerHTML\n                    props.updateItem (item, index, list)\n                }\n                }}\n                >{props.Data.[list].[index]}</p>\n        })}\n    </div>\n}\n\nexport default Plate","import React from \"react\";\nimport mealTimes from \"./mealTimes\"\nimport Plate from \"./Plate\"\n\nconst Meals = props=>{\n    return <div className = \"day\">\n        {mealTimes.map((meal, mealIndex)=>{\n\n        return <div>    \n\n            <h3>{meal}</h3>\n            <Plate \n            Data = {props.Data}\n            weekIndex = {props.weekIndex}\n            mealIndex = {mealIndex}\n            updateItem = {props.updateItem}\n            />\n\n        </div>\n\n\n        })\n    }\n\n    </div>\n\n}\nexport default Meals","import React from \"react\"\nimport week from \"./week\"\nimport Meals from \"./Meals\"\n\n// set up date\nconst date = new Date()\n\n\n// ensure that number tomorrow is an index \n// in week array\n\n\nconst Day = props=>{\n    let daynum = date.getDay()\n    if(!week[daynum]){daynum = 0}\n\n\n    const foodGroups = Object.keys(props.Data).slice(1,)\n    const days = []\n\n    // find longest food list \n    let longest = 0\n    let longestList = \"Protein\"\n    foodGroups.forEach(list=>{\n        if (props.Data.[list].length>longest){\n            longest = props.Data.[list].length\n            longestList = list\n        }\n    })\n    \n\n\n\n    props.Data.[longestList].forEach((value,index)=>{\n\n\n        if (index%3 === 0){\n            daynum++ \n            if(!week[daynum]){daynum = 0}\n\n            days.push(week[daynum])\n        }\n    })\n     \n    return <div>\n        {days.map((weekDay, weekIndex)=>{\n        return <div>\n            <h2>{weekDay}</h2>  \n            <Meals \n            Data = {props.Data}\n            weekIndex = {weekIndex}\n            updateItem = {props.updateItem}\n            />\n        </div>\n    \n              \n        })}\n    </div>\n\n        \n\n   \n}\n\nexport default Day","import React,{useState,useEffect} from 'react';\nimport ShopppingList from \"./components/ShoppingList\"\nimport string from \"./components/data.json\"\nimport FoodGroup from \"./components/FoodGroup\"\nimport Day from \"./components/Day\"\n\n\nconst url = \"https://floating-hamlet-55199.herokuapp.com/getFoods\"\n// const url = \"https://floating-hamlet-55199.herokuapp.com/getFoods\"\n\n\n\n\nconst App = ()=>{\n\n    // retrive saved Data from database\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [Data, setData] = useState(string);\n    \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n        fetch(url)\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setData(result);\n            console.log(result)\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n\n\n    // modify Data\n    \n\n    const addToPlan = (item, group)=>{\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: prev.Foods,\n                    Protein: [...prev.Protein, item],\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: [...prev.Carb, item],\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: [...prev.Veggie, item]\n                }\n            }\n        })\n    }\n\n\n    const addToFoods = (item, group)=>{\n\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: [...prev.Foods.[group], item],\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: [...prev.Foods.[group], item],\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: [...prev.Foods.[group], item]\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n    }\n\n    const removeFromFoods = (item, group)=>{\n\n\n        setData(prev=>{\n\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: prev.Foods.[group].filter(element => element!==item),\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.[group].filter(element => element!==item),\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.[group].filter(element => element!==item)\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n\n    }\n\n    const startOver = ()=>{\n        setData(prev=>{\n            return{\n                Foods: prev.Foods,                \n                Protein: [],\n                Carb: [],\n                Veggie: []\n            }\n        })\n    }\n\n    const updateItem = (item, index, group )=>{\n\n        // remove \"&nbsp;\" from item string\n        if(item.slice(-6,)=== \"&nbsp;\"){\n            console.log(item, \"item modified\")\n\n            item = item.slice(0,-6)\n        }\n\n\n        setData(prev=>{\n            const newArray = prev.[group].map((newItem, newIndex)=>{\n                if (newIndex === index){\n                    return item\n                }\n                return newItem\n            })\n            console.log(newArray)\n            if (group === \"Protein\"){\n                \n\n                return{\n                    Foods: prev.Foods,\n                    Protein: newArray,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: newArray,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: newArray\n                }\n            }\n        })\n    }\n    \n\n    let FoodGroups = []\n    if (Data.Foods){\n        FoodGroups = Object.keys(Data.Foods)\n    }\n\n\n\n\n    // Soppinglist \n    const [hideCompleted, toggleHide] = useState(false)\n    let showAll = \"Hide Complete\"\n    if (hideCompleted){showAll = \"Show All\"}\n\n\n\n\n\n\n\n\n    return <div>\n\n        <header>\n            <a href= \"/\"> <img src=\"/images/logoyellow.svg\" alt=\"Home\" /> </a>\n            <nav>\n                <a href= \"/meal-plan\"> Meal Plan  </a>\n                <a href= \"/strength\"> Strength </a>\n                <a href= \"/cardio\"> Cardio </a>\n            </nav>\n            <div className =\"user\">\n                <a href= \"/logout\"> \n                <img src=\"https://lh3.googleusercontent.com/a/AATXAJwsRaE2gU2HRUZH_0r95dt-5dtdcaxFPnrCy1VI=s96-c\" alt=\"\" />\n                </a>\n            </div>\n\n        </header>\n\n        <div className=\"body\">\n\n            <div className = \"leftOrRightSide\">\n                <div>\n                    <h1>Foods List</h1>\n                \n                    <div className = \"lists\">\n                        {FoodGroups.map(group =>{\n                            return <FoodGroup \n                                key = {group}\n                                group = {group} \n                                list = {Data.Foods.[group]}\n                                addToPlan = {addToPlan}\n                                addToFoods = {addToFoods}\n                                removeFromFoods = {removeFromFoods}\n                                />\n                            })   \n                        }\n                    </div>\n                </div>  \n\n                <div className = \"shoppingList\">\n                    <h1>Shopping List</h1>\n\n                    <div>\n                        <div className = \"lists\">\n                            {Object.keys(Data).map(list=>{\n                                if (list === \"Foods\"){return null}\n                                return <ShopppingList \n                                hideCompleted = {hideCompleted}\n                                list =  {list}\n                                Data = {Data}\n                                key = {list}\n                                />   \n                            })}\n                        </div>\n\n                        <button \n                            className = \"edit\"\n                            onClick = {event=>{\n                                toggleHide(prev=>!prev)\n                            }}\n                            >{showAll}\n                        </button>\n                    \n                    </div>\n                </div>\n            </div>\n\n            <div className= \"leftOrRightSide\">\n                <h1>Meal Plan</h1>\n                <Day \n                Data = {Data}\n                updateItem = {updateItem}\n                />\n                \n\n\n                <form action={url} method = \"post\">\n                    <input \n                    style = {{display:\"none\"}}\n                    type=\"text\" \n                    id = \"saveData\" \n                    name = \"data\" \n                    onChange = {event=>{\n                        event.preventDefault()\n                    }}\n                \n                    \n                    value = {JSON.stringify (Data)}\n                    />\n\n                    <button className = \"done\"\n                        onClick = {event=>{\n                        }}\n                    >save</button>\n\n\n\n\n                    <button className = \"edit\"\n                        onClick = {event=>{\n                            event.preventDefault()\n                            startOver()\n                        }}\n                    >Start Over</button>\n\n                </form>\n                \n                \n\n\n                \n\n            </div>\n\n\n        </div>\n        \n\n    </div>\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}