{"version":3,"sources":["components/Items.js","components/FoodGroup.js","components/week.js","components/PlateItem.js","components/mealTimes.js","components/Day.js","components/ShoppingListItem.js","components/ShoppingList.js","App.jsx","index.js"],"names":["Items","props","list","useState","visible","toggleVisible","done","className","style","display","map","item","index","onClick","event","addToPlan","group","preventDefault","removeFromFoods","placeholder","onKeyDown","keyCode","target","value","addToFoods","prev","ListFoodGroups","toggle","week","PlateItem","indexNum","contentEditable","suppressContentEditableWarning","innerHTML","updateItem","Meals","Day","initPos","dayIndex","day","mealTimes","meal","Object","keys","Data","ShoppingListItem","line","hide","hideCompleted","color","textDecoration","marginRight","unit","total","ShoppingList","listName","quantities","forEach","getQuatities","Serving","num","oz","lb","Math","floor","serv","url","tomorrow","Date","getDay","App","max","setError","setIsLoaded","string","setData","useEffect","fetch","then","res","json","result","console","log","error","Foods","Protein","Carb","Veggie","length","newDay","filter","element","slice","newArray","newItem","newIndex","daysOfTheWeek","updateDays","FoodGroups","toggleHide","showAll","href","src","alt","FoodGroup","action","method","type","id","name","onChange","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a94d57c.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nconst Items = props=>{\n\n    const list = props.list\n\n    // edit options\n    const [visible, toggleVisible] = useState(true)\n\n    const done = visible? \"Edit\": \"Done\"\n\n\n\n\n\n    \n    return <div className = \"singleList\"\n    style={{display: props.visible? \"block\": \"none\"}}\n    // style = {{display: props.visible? \"inline\": \"none\"}}\n    >\n        {list.map((item, index)=>{\n\n            return <div key = {index}>\n                <p\n                    style={{display: visible? \"block\": \"none\"}}\n                    key = {item}\n                    onClick = {event=>{\n                        props.addToPlan(item, props.group, list)\n                    }}\n                    >{item}\n                </p>\n\n                <p\n                    style={{display: visible? \"none\":\"block\"}}\n                    onClick = {event=>{\n                        event.preventDefault()\n                        props.removeFromFoods(item, props.group)\n\n                    }}\n                >DELETE {item}</p>\n                \n            </div>\n        })}\n        <div className = \"editFoodGroup\">\n\n            <input \n                style={{display: visible? \"none\":\"inline\"}}\n                className = \"edit\"\n                placeholder = \"Add an Item\"\n                onKeyDown = {event=>{\n                    if (event.keyCode === 13){\n                        let item = event.target.value\n                        props.addToFoods(item, props.group)\n                        event.target.value = \"\"\n\n                    }                   \n                }}\n            \n            />\n\n            \n\n            <button\n                className = \"done\"\n                onClick = {event=>{\n                    event.preventDefault()\n                    toggleVisible(prev=>!prev)\n\n                }}\n            >{done}</button>\n\n        </div>\n\n    </div>\n}\n\nexport default Items\n","import React, { useState } from 'react';\nimport Items from \"./Items\"\n\nconst ListFoodGroups = props=>{\n    const [visible, toggle] = useState( true ) \n\n    return <div>\n        <h2\n        onClick = {event=>{\n            event.preventDefault()\n            toggle(prev=>!prev)\n        }}\n        >{props.group}</h2>\n        \n        <Items \n        visible = {visible}\n        list = {props.list} // foodgroup array\n        addToPlan = {props.addToPlan}\n        group = {props.group}\n        addToFoods = {props.addToFoods}\n        removeFromFoods = {props.removeFromFoods}\n        />\n    </div>\n\n\n}\n\nexport default ListFoodGroups","const week = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n]\n\nexport default week","const PlateItem = props =>{\n    if (props.list[props.indexNum]){\n        return <p contentEditable = \"true\"\n        suppressContentEditableWarning={true}\n        key ={props.indexNum}\n        onKeyDown = {event =>{\n            if (event.keyCode === 13 ){\n                event.preventDefault()\n                let item = event.target.innerHTML\n                props.updateItem (item,props.indexNum, props.group)\n            }\n            }}\n        >{props.list[props.indexNum]}</p>\n        \n        // <input Value = {props.list[props.indexNum]} \n        // onKeyDown = {event =>{\n        //     if (event.keyCode === 13 ){\n        //         props.updateItem (event.target.value,props.indexNum, props.group)\n        //     }\n        //     }}\n        // />\n\n\n    } else {return null}\n\n}\n\nexport default PlateItem","const Meals = [\n    \"Breakfast\",\n    \"Lunch\",\n    \"Diner\"\n]\n\nexport default Meals","import React from 'react';\nimport PlateItem from './PlateItem';\nimport mealTimes from \"./mealTimes\"\n\n\nconst Day = props=>{\n\n    // keek track of position in array from Data object\n    let initPos = 3*props.dayIndex\n\n\n\n\n    return <div className = \"box\">\n\n        <h2>{props.day}</h2>\n        <div className = \"day\">\n        {mealTimes.map((meal, index)=>{\n            \n            let indexNum = initPos+index \n\n            return <div className = \"meal\" key = {indexNum}>\n                <h3>{meal}</h3>\n\n                \n                \n                {Object.keys(props.Data).map(group=>{\n\n                    if (group !== \"Foods\"){\n                        return <PlateItem \n                        key = {group}\n                        indexNum = {indexNum}\n                        group = {group}\n                        list = {props.Data.[group]}\n                        updateItem = {props.updateItem}\n                        />\n                    } else {return null}\n\n\n                })}\n                \n            </div>\n            \n        })}\n            \n        </div>\n\n\n\n\n    </div>\n}\nexport default Day\n\n","import React,{useState} from 'react';\n\nconst ShoppingListItem =props=>{\n    const [line, toggle] = useState (false)\n    let hide = false\n    if(line){hide = props.hideCompleted}\n\n\n    return <p \n    className = \"shoppingListItem\"\n    onClick={event=>{\n        event.preventDefault()\n        toggle(prev=>!prev)\n    }}\n    \n    style = {\n        {color: line?\"#29C7AC\":\"black\",\n        textDecoration:line?\"line-through\":\"none\",\n        display: hide?\"none\":\"block\",\n        marginRight: \"15px\"}\n    }\n    key = {props.index}>{props.unit(props.total)+\" \"+props.item}</p>\n}\n\nexport default ShoppingListItem","import React,{useState} from 'react';\nimport ShoppingListItem from \"./ShoppingListItem\"\n\nconst ShoppingList = props => {\n    let list = props.Data.[props.list]\n    const listName = props.list\n\n    if(props.list === \"Foods\"){list = []}\n\n\n    // render shopping list\n    const quantities = {}\n    \n    \n    const getQuatities = list=>{\n        if (list){\n            list.forEach(item=>{\n                if (quantities.[item]){quantities.[item]++}\n                else{quantities.[item]= 1} \n            })\n        }\n\n    }\n\n    \n    getQuatities(props.Data.[props.list])\n\n\n    const ShoppingList = Object.keys(quantities)\n\n    // serving sizes \n    const [Serving, setPServ] = useState(6)\n\n    const unit =num =>{\n        let oz = num%16\n        let lb = Math.floor(num/16)\n\n        if (lb>0){\n            return lb + \" lbs \" + oz + \" oz \"\n        } else {return oz + \" oz \"}\n    }\n\n\n    return <div className = \"singleList\">\n        <h3>{listName}</h3>\n        <div className = \"serving\">\n\n            <div>\n                {/* adjust protein serving */}\n\n                <p>serving size {Serving} oz</p>\n\n                {/* <button\n                className = \"edit\"\n                onClick={event=>{\n                    event.preventDefault()\n                    if (proteinServing>0){\n                        setPServ(prev=>prev--)\n                    }\n                }}\n                >-</button>\n\n\n                <button\n                className = \"edit\"\n                onClick={event=>{\n                    event.preventDefault()\n                    if (proteinServing<=11){\n                        setPServ(prev=>prev+1)\n                    }\n                }}\n                >+</button> */}\n            </div>\n\n            \n\n\n           \n\n\n        </div>\n\n        <div>\n            {ShoppingList.map((item, index)=>{\n\n                // establish serving size for element\n                let serv = Serving\n\n                let total = quantities.[item]*serv\n\n                return <ShoppingListItem \n                    hideCompleted = {props.hideCompleted}\n                    index = {index}\n                    unit = {unit}\n                    total = {total}\n                    item = {item}\n                    key = {index}\n                />\n            })}\n\n        </div>\n\n\n\n\n    </div>\n}\n\nexport default ShoppingList","import React,{useState,useEffect} from 'react';\nimport FoodGroup from \"./components/FoodGroup\"\nimport week from \"./components/week\"\nimport Day from \"./components/Day\"\nimport ShopppingList from \"./components/ShoppingList\"\nimport string from \"./components/data.json\"\n\n\n\n// const url = \"https://floating-hamlet-55199.herokuapp.com/getFoods\"\nconst url = \"https://floating-hamlet-55199.herokuapp.com/getFoods\"\nconst date = new Date()\n\n// set up date\nlet tomorrow = date.getDay()\nlet day = tomorrow\n\n// ensure that number tomorrow is an index \n// in week array\nif(!week[tomorrow]){tomorrow = 0}\n\n\n\n\nconst App = ()=>{\n\n    let max = 0\n    // retrive saved Data from database\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [Data, setData] = useState(string);\n    \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n        fetch(url)\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setData(result);\n            console.log(result)\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n\n\n    // modify Data\n    \n\n    const addToPlan = (item, group)=>{\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: prev.Foods,\n                    Protein: [...prev.Protein, item],\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: [...prev.Carb, item],\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: [...prev.Veggie, item]\n                }\n            }\n        })\n        if (Data.[group].length> max){\n            max = Data.[group].length\n            newDay()\n        }\n        \n\n        \n    }\n\n\n    const addToFoods = (item, group)=>{\n\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: [...prev.Foods.[group], item],\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: [...prev.Foods.[group], item],\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: [...prev.Foods.[group], item]\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n    }\n\n    const removeFromFoods = (item, group)=>{\n\n\n        setData(prev=>{\n\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: prev.Foods.[group].filter(element => element!==item),\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.[group].filter(element => element!==item),\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.[group].filter(element => element!==item)\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n\n    }\n\n    const startOver = ()=>{\n        setData(prev=>{\n            return{\n                Foods: prev.Foods,                \n                Protein: [],\n                Carb: [],\n                Veggie: []\n            }\n        })\n        updateDays([week[tomorrow]])\n    }\n\n    const updateItem = (item, index, group )=>{\n\n        // remove \"&nbsp;\" from item string\n        if(item.slice(-6,)=== \"&nbsp;\"){\n            console.log(item, \"item modified\")\n\n            item = item.slice(0,-6)\n        }\n\n\n        setData(prev=>{\n            const newArray = prev.[group].map((newItem, newIndex)=>{\n                if (newIndex === index){\n                    return item\n                }\n                return newItem\n            })\n            console.log(newArray)\n            if (group === \"Protein\"){\n                \n\n                return{\n                    Foods: prev.Foods,\n                    Protein: newArray,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: newArray,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: newArray\n                }\n            }\n        })\n    }\n    \n    const [daysOfTheWeek, updateDays] = useState([week[tomorrow]])\n    \n\n\n    const newDay = ()=>{\n\n        if (max/daysOfTheWeek.length===3){\n            day++\n            if(!week[day]){day = 0}\n            updateDays(prev=>[...prev, week[day]]\n            )\n\n        }\n    }\n\n    let FoodGroups = []\n    if (Data.Foods){\n        FoodGroups = Object.keys(Data.Foods)\n    }\n\n\n\n\n    // Soppinglist \n    const [hideCompleted, toggleHide] = useState(false)\n    let showAll = \"Hide Complete\"\n    if (hideCompleted){showAll = \"Show All\"}\n\n\n\n\n\n\n\n\n    return <div>\n\n        <header>\n            <a href= \"/\"> <img src=\"/images/logoyellow.svg\" alt=\"Home\" /> </a>\n            <nav>\n                <a href= \"/meal-plan\"> Meal Plan  </a>\n                <a href= \"/strength\"> Strength </a>\n                <a href= \"/cardio\"> Cardio </a>\n            </nav>\n            <div className =\"user\">\n                <img src=\"https://lh3.googleusercontent.com/a/AATXAJwsRaE2gU2HRUZH_0r95dt-5dtdcaxFPnrCy1VI=s96-c\" alt=\"\" />\n                <a href= \"/logout\"> Log Out </a>\n            </div>\n\n        </header>\n\n        <div className=\"body\">\n\n            <div className = \"leftOrRightSide\">\n                <div>\n                    <h1>Foods List</h1>\n                \n                    <div className = \"lists\">\n                        {FoodGroups.map(group =>{\n                            return <FoodGroup \n                                key = {group}\n                                group = {group} \n                                list = {Data.Foods.[group]}\n                                addToPlan = {addToPlan}\n                                addToFoods = {addToFoods}\n                                removeFromFoods = {removeFromFoods}\n                                />\n                            })   \n                        }\n                    </div>\n                </div>  \n\n                <div className = \"shoopingList\">\n                    <h1>Shopping List</h1>\n\n                    <div>\n                        <div className = \"lists\">\n                            {Object.keys(Data).map(list=>{\n                                if (list === \"Foods\"){return null}\n                                return <ShopppingList \n                                hideCompleted = {hideCompleted}\n                                list =  {list}\n                                Data = {Data}\n                                key = {list}\n                                />   \n                            })}\n                        </div>\n\n                        <button \n                            className = \"edit\"\n                            onClick = {event=>{\n                                toggleHide(prev=>!prev)\n                            }}\n                            >{showAll}\n                        </button>\n                    \n                    </div>\n                </div>\n            </div>\n\n\n\n            <div className= \"leftOrRightSide\">\n                <h1>Meal Plan</h1>\n\n                {daysOfTheWeek.map((day, dayIndex)=>{\n\n                    return <Day \n                    day = {day}\n                    FoodGroups = {FoodGroups}\n                    Data = {Data}\n                    dayIndex = {dayIndex}\n                    key = {dayIndex}\n                    updateItem = {updateItem}\n                    \n                    />\n                }\n                )}\n\n                <form action={url} method = \"post\">\n                    <input \n                    style = {{display:\"none\"}}\n                    type=\"text\" \n                    id = \"saveData\" \n                    name = \"data\" \n                    onChange = {event=>{\n                        event.preventDefault()\n                    }}\n                \n                    \n                    value = {JSON.stringify (Data)}\n                    />\n\n                    <button className = \"done\"\n                        onClick = {event=>{\n                        }}\n                    >save</button>\n\n\n\n\n                    <button className = \"edit\"\n                        onClick = {event=>{\n                            event.preventDefault()\n                            startOver()\n                        }}\n                    >Start Over</button>\n\n                </form>\n                \n                \n\n\n                \n\n            </div>\n\n\n        </div>\n        \n\n    </div>\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}