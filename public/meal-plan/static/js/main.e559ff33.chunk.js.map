{"version":3,"sources":["components/Items.js","components/FoodGroup.js","components/week.js","components/PlateItem.js","components/mealTimes.js","components/Day.js","components/ShoppingListItem.js","components/ShoppingList.js","App.jsx","index.js"],"names":["Items","props","list","useState","visible","toggleVisible","done","className","map","item","index","style","display","onClick","event","preventDefault","addToPlan","group","removeFromFoods","placeholder","onKeyDown","keyCode","target","value","addToFoods","prev","ListFoodGroups","toggle","console","log","week","PlateItem","indexNum","contentEditable","suppressContentEditableWarning","innerHTML","updateItem","Meals","Day","initPos","dayIndex","day","mealTimes","meal","Object","keys","Data","ShoppingListItem","line","hide","hideCompleted","color","textDecoration","marginRight","unit","total","ShoppingList","listName","quantities","forEach","getQuatities","Serving","num","oz","lb","Math","floor","serv","url","tomorrow","Date","getDay","App","max","setError","setIsLoaded","string","setData","useEffect","fetch","then","res","json","result","error","Foods","Protein","Carb","Veggie","length","newDay","filter","element","slice","newArray","newItem","newIndex","daysOfTheWeek","updateDays","FoodGroups","toggleHide","showAll","href","src","alt","FoodGroup","action","method","type","id","name","onChange","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e559ff33.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nconst Items = props=>{\n\n    const list = props.list\n\n    // edit options\n    const [visible, toggleVisible] = useState(true)\n\n    const done = visible? \"Edit\": \"Done\"\n\n\n\n\n\n    \n    return <div className = \"box singleList\"\n        // style = {{display: props.visible? \"inline\": \"none\"}}\n    >\n        {list.map((item, index)=>{\n\n            return <div \n                key = {index}\n                >\n                 <button\n                style={{display: visible? \"inline\": \"none\"}}\n                className = \"item\"\n                key = {item}\n                onClick = {event=>{\n                    event.preventDefault()\n                    props.addToPlan(item, props.group, list)\n                }}\n                >{item}</button>\n\n                <button\n                    style={{display: visible? \"none\":\"inline\"}}\n                    className = \"item\"\n                    onClick = {event=>{\n                        event.preventDefault()\n                        props.removeFromFoods(item, props.group)\n\n                    }}\n                >DELETE {item}</button>\n                \n            </div>\n        })}\n        <div className = \"editFoodGroup\">\n\n            <input \n                style={{display: visible? \"none\":\"inline\"}}\n                className = \"edit\"\n                placeholder = \"Add an Item\"\n                onKeyDown = {event=>{\n                    if (event.keyCode === 13){\n                        let item = event.target.value\n                        props.addToFoods(item, props.group)\n                        event.target.value = \"\"\n\n                    }                   \n                }}\n            \n            />\n\n            \n\n            <button\n                className = \"done\"\n                onClick = {event=>{\n                    event.preventDefault()\n                    toggleVisible(prev=>!prev)\n\n                }}\n            >{done}</button>\n\n        </div>\n\n    </div>\n}\n\nexport default Items\n","import React, { useState } from 'react';\nimport Items from \"./Items\"\n\nconst ListFoodGroups = props=>{\n    const [visible, toggle] = useState( true ) \n\n    return <div>\n        <h2\n        onClick = {event=>{\n            event.preventDefault()\n            toggle(prev=>!prev)\n            console.log(visible)\n        }}\n        >{props.group}</h2>\n        \n        <Items \n        visible = {visible}\n        list = {props.list} // foodgroup array\n        addToPlan = {props.addToPlan}\n        group = {props.group}\n        addToFoods = {props.addToFoods}\n        removeFromFoods = {props.removeFromFoods}\n        />\n    </div>\n\n\n}\n\nexport default ListFoodGroups","const week = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n]\n\nexport default week","const PlateItem = props =>{\n    if (props.list[props.indexNum]){\n        return <p contentEditable = \"true\"\n        suppressContentEditableWarning={true}\n        key ={props.indexNum}\n        onKeyDown = {event =>{\n            if (event.keyCode === 13 ){\n                event.preventDefault()\n                let item = event.target.innerHTML\n                props.updateItem (item,props.indexNum, props.group)\n            }\n            }}\n        >{props.list[props.indexNum]}</p>\n        \n        // <input Value = {props.list[props.indexNum]} \n        // onKeyDown = {event =>{\n        //     if (event.keyCode === 13 ){\n        //         props.updateItem (event.target.value,props.indexNum, props.group)\n        //     }\n        //     }}\n        // />\n\n\n    } else {return null}\n\n}\n\nexport default PlateItem","const Meals = [\n    \"Breakfast\",\n    \"Lunch\",\n    \"Diner\"\n]\n\nexport default Meals","import React from 'react';\nimport PlateItem from './PlateItem';\nimport mealTimes from \"./mealTimes\"\n\n\nconst Day = props=>{\n\n    // keek track of position in array from Data object\n    let initPos = 3*props.dayIndex\n\n\n\n\n    return <div className = \"box\">\n\n        <h2>{props.day}</h2>\n        <div className = \"day\">\n        {mealTimes.map((meal, index)=>{\n            \n            let indexNum = initPos+index \n\n            return <div className = \"meal\" key = {indexNum}>\n                <h3>{meal}</h3>\n\n                \n                \n                {Object.keys(props.Data).map(group=>{\n\n                    if (group !== \"Foods\"){\n                        return <PlateItem \n                        key = {group}\n                        indexNum = {indexNum}\n                        group = {group}\n                        list = {props.Data.[group]}\n                        updateItem = {props.updateItem}\n                        />\n                    } else {return null}\n\n\n                })}\n                \n            </div>\n            \n        })}\n            \n        </div>\n\n\n\n\n    </div>\n}\nexport default Day\n\n","import React,{useState} from 'react';\n\nconst ShoppingListItem =props=>{\n    const [line, toggle] = useState (false)\n    let hide = false\n    if(line){hide = props.hideCompleted}\n\n\n    return <p \n    className = \"shoppingListItem\"\n    onClick={event=>{\n        event.preventDefault()\n        toggle(prev=>!prev)\n    }}\n    \n    style = {\n        {color: line?\"#29C7AC\":\"black\",\n        textDecoration:line?\"line-through\":\"none\",\n        display: hide?\"none\":\"block\",\n        marginRight: \"15px\"}\n    }\n    key = {props.index}>{props.unit(props.total)+\" \"+props.item}</p>\n}\n\nexport default ShoppingListItem","import React,{useState} from 'react';\nimport ShoppingListItem from \"./ShoppingListItem\"\n\nconst ShoppingList = props => {\n    let list = props.Data.[props.list]\n    const listName = props.list\n\n    if(props.list === \"Foods\"){list = []}\n\n\n    // render shopping list\n    const quantities = {}\n    \n    \n    const getQuatities = list=>{\n        if (list){\n            list.forEach(item=>{\n                if (quantities.[item]){quantities.[item]++}\n                else{quantities.[item]= 1} \n            })\n        }\n\n    }\n\n    \n    getQuatities(props.Data.[props.list])\n\n\n    const ShoppingList = Object.keys(quantities)\n\n    // serving sizes \n    const [Serving, setPServ] = useState(6)\n\n    const unit =num =>{\n        let oz = num%16\n        let lb = Math.floor(num/16)\n\n        if (lb>0){\n            return lb + \" lbs \" + oz + \" oz \"\n        } else {return oz + \" oz \"}\n    }\n\n\n    return <div className = \"singleList\">\n        <h3>{listName}</h3>\n        <div className = \"serving\">\n\n            <div>\n                {/* adjust protein serving */}\n\n                <p>serving size {Serving} oz</p>\n\n                {/* <button\n                className = \"edit\"\n                onClick={event=>{\n                    event.preventDefault()\n                    if (proteinServing>0){\n                        setPServ(prev=>prev--)\n                    }\n                }}\n                >-</button>\n\n\n                <button\n                className = \"edit\"\n                onClick={event=>{\n                    event.preventDefault()\n                    if (proteinServing<=11){\n                        setPServ(prev=>prev+1)\n                    }\n                }}\n                >+</button> */}\n            </div>\n\n            \n\n\n           \n\n\n        </div>\n\n        <div>\n            {ShoppingList.map((item, index)=>{\n\n                // establish serving size for element\n                let serv = Serving\n\n                let total = quantities.[item]*serv\n\n                return <ShoppingListItem \n                    hideCompleted = {props.hideCompleted}\n                    index = {index}\n                    unit = {unit}\n                    total = {total}\n                    item = {item}\n                    key = {index}\n                />\n            })}\n\n        </div>\n\n\n\n\n    </div>\n}\n\nexport default ShoppingList","import React,{useState,useEffect} from 'react';\nimport FoodGroup from \"./components/FoodGroup\"\nimport week from \"./components/week\"\nimport Day from \"./components/Day\"\nimport ShopppingList from \"./components/ShoppingList\"\nimport string from \"./components/data.json\"\n\n\n\n// const url = \"https://floating-hamlet-55199.herokuapp.com/getFoods\"\nconst url = \"https://floating-hamlet-55199.herokuapp.com/getFoods\"\nconst date = new Date()\n\n// set up date\nlet tomorrow = date.getDay()\nlet day = tomorrow\n\n// ensure that number tomorrow is an index \n// in week array\nif(!week[tomorrow]){tomorrow = 0}\n\n\n\n\nconst App = ()=>{\n\n    let max = 0\n    // retrive saved Data from database\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [Data, setData] = useState(string);\n    \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n        fetch(url)\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setData(result);\n            console.log(result)\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n\n\n    // modify Data\n    \n\n    const addToPlan = (item, group)=>{\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: prev.Foods,\n                    Protein: [...prev.Protein, item],\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: [...prev.Carb, item],\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: [...prev.Veggie, item]\n                }\n            }\n        })\n        if (Data.[group].length> max){\n            max = Data.[group].length\n            newDay()\n        }\n        \n\n        \n    }\n\n\n    const addToFoods = (item, group)=>{\n\n        setData(prev=>{\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: [...prev.Foods.[group], item],\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: [...prev.Foods.[group], item],\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: [...prev.Foods.[group], item]\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n    }\n\n    const removeFromFoods = (item, group)=>{\n\n\n        setData(prev=>{\n\n\n            if (group === \"Protein\"){\n                return{\n                    Foods: {\n                        Protein: prev.Foods.[group].filter(element => element!==item),\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.Veggie\n                    },\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.[group].filter(element => element!==item),\n                        Veggie: prev.Foods.Veggie\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: {\n                        Protein: prev.Foods.Protein,\n                        Carb: prev.Foods.Carb,\n                        Veggie: prev.Foods.[group].filter(element => element!==item)\n                    },                    \n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            }\n        })\n\n\n    }\n\n    const startOver = ()=>{\n        setData(prev=>{\n            return{\n                Foods: prev.Foods,                \n                Protein: [],\n                Carb: [],\n                Veggie: []\n            }\n        })\n        updateDays([week[tomorrow]])\n    }\n\n    const updateItem = (item, index, group )=>{\n\n        // remove \"&nbsp;\" from item string\n        if(item.slice(-6,)=== \"&nbsp;\"){\n            console.log(item, \"item modified\")\n\n            item = item.slice(0,-6)\n        }\n\n\n        setData(prev=>{\n            const newArray = prev.[group].map((newItem, newIndex)=>{\n                if (newIndex === index){\n                    return item\n                }\n                return newItem\n            })\n            console.log(newArray)\n            if (group === \"Protein\"){\n                \n\n                return{\n                    Foods: prev.Foods,\n                    Protein: newArray,\n                    Carb: prev.Carb,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Carb\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: newArray,\n                    Veggie: prev.Veggie\n                }\n            } else if (group === \"Veggie\"){\n\n                return{\n                    Foods: prev.Foods,\n                    Protein: prev.Protein,\n                    Carb: prev.Carb,\n                    Veggie: newArray\n                }\n            }\n        })\n    }\n    \n    const [daysOfTheWeek, updateDays] = useState([week[tomorrow]])\n    \n\n\n    const newDay = ()=>{\n\n        if (max/daysOfTheWeek.length===3){\n            day++\n            if(!week[day]){day = 0}\n            updateDays(prev=>[...prev, week[day]]\n            )\n\n        }\n    }\n\n    let FoodGroups = []\n    if (Data.Foods){\n        FoodGroups = Object.keys(Data.Foods)\n    }\n\n\n\n\n    // Soppinglist \n    const [hideCompleted, toggleHide] = useState(false)\n    let showAll = \"Hide Complete\"\n    if (hideCompleted){showAll = \"Show All\"}\n\n\n\n\n\n\n\n\n    return <div>\n\n        <header className = \"box\">\n            <a href= \"/\"> <img src=\"/images/log-green.svg\" alt=\"\" /> </a>\n            <nav>\n                <a href= \"/meal-plan\"> Meal Plan  </a>\n                <a href= \"/strength\"> Strength </a>\n                <a href= \"/cardio\"> Cardio </a>\n            </nav>\n            <div>\n                <img src=\"https://lh3.googleusercontent.com/a/AATXAJwsRaE2gU2HRUZH_0r95dt-5dtdcaxFPnrCy1VI=s96-c\" alt=\"\" />\n                <a href= \"/logout\"> Log Out </a>\n            </div>\n\n        </header>\n\n        <div className=\"body\">\n            {/* list food items */}\n\n            <div>\n\n                <div className = \"lists\">\n                    {FoodGroups.map(group =>{\n                        return <FoodGroup \n                            key = {group}\n                            group = {group} \n                            list = {Data.Foods.[group]}\n                            addToPlan = {addToPlan}\n                            addToFoods = {addToFoods}\n                            removeFromFoods = {removeFromFoods}\n                            />\n                        })   \n                    }\n                </div>\n            \n\n                <div className = \"shoopingList\">\n                    <h1>Shopping List</h1>\n\n                    <div>\n                        <div className = \"lists\">\n                            {Object.keys(Data).map(list=>{\n                                if (list === \"Foods\"){return null}\n                                return <ShopppingList \n                                hideCompleted = {hideCompleted}\n                                list =  {list}\n                                Data = {Data}\n                                key = {list}\n                                />   \n                            })}\n                        </div>\n\n                        <button \n                            className = \"edit\"\n                            onClick = {event=>{\n                                toggleHide(prev=>!prev)\n                            }}\n                        >{showAll}</button>\n                \n                    </div>\n                </div>\n            </div>\n                \n\n            <div className= \"mealPlan\">\n                <h1>Meal Plan</h1>\n                \n\n                {daysOfTheWeek.map((day, dayIndex)=>{\n\n                    return <Day \n                    day = {day}\n                    FoodGroups = {FoodGroups}\n                    Data = {Data}\n                    dayIndex = {dayIndex}\n                    key = {dayIndex}\n                    updateItem = {updateItem}\n                    \n                    />\n                }\n                )}\n\n                <form action={url} method = \"post\">\n                    <input \n                    style = {{display:\"none\"}}\n                    type=\"text\" \n                    id = \"saveData\" \n                    name = \"data\" \n                    onChange = {event=>{\n                        event.preventDefault()\n                    }}\n                \n                    \n                    value = {JSON.stringify (Data)}\n                    />\n\n                    <button className = \"done\"\n                        onClick = {event=>{\n                        }}\n                    >save</button>\n\n\n\n\n                    <button className = \"edit\"\n                        onClick = {event=>{\n                            event.preventDefault()\n                            startOver()\n                        }}\n                    >Start Over</button>\n\n                </form>\n                \n                \n\n\n                \n\n            </div>\n\n\n        </div>\n        <input className = \"feedBack\" type=\"text\" placeholder = \"Feedback\" />\n        \n\n    </div>\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}